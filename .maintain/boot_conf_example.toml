# Enable validator mode.
#
# The node will be started with the authority role and actively
# participate in any consensus task that it can (e.g. depending on
# availability of local keys).
validator = true

# Enable sentry mode.
#
# The node will be started with the authority role and participate in
# consensus tasks as an "observer", it will never actively participate
# regardless of whether it could (e.g. keys are available locally). This
# mode is useful as a secure proxy for validators (which would run
# detached from the network), since we want this node to participate in
# the full consensus protocols in order to have all needed consensus data
# available to relay to private nodes.
#sentry = []

# Disable GRANDPA voter when running in validator mode, otherwise disable the GRANDPA observer.
#no-grandpa = false

# Experimental: Run in light client mode.
#light = false

# Listen to all RPC interfaces.
#
# Default is local. Note: not all RPC methods are safe to be exposed publicly. Use an RPC proxy
# server to filter out dangerous methods. More details: https://github.com/paritytech/substrate/wiki/Public-RPC.
# Use `--unsafe-rpc-external` to suppress the warning if you understand the risks.
#rpc-external = false

# Listen to all RPC interfaces.
#
# Same as `--rpc-external`.
unsafe-rpc-external = true

# RPC methods to expose.
#
# - `Unsafe`: Exposes every RPC method.
# - `Safe`: Exposes only a safe subset of RPC methods, denying unsafe RPC methods.
# - `Auto`: Acts as `Safe` if RPC is served externally, e.g. when `--{rpc,ws}-external` is passed,
# otherwise acts as `Unsafe`.
#rpc-methods = "Auto"

# Listen to all Websocket interfaces.
#
# Default is local. Note: not all RPC methods are safe to be exposed publicly. Use an RPC proxy
# server to filter out dangerous methods. More details: https://github.com/paritytech/substrate/wiki/Public-RPC.
# Use `--unsafe-ws-external` to suppress the warning if you understand the risks.
#ws-external = false

# Listen to all Websocket interfaces.
#
# Same as `--ws-external` but doesn't warn you about it.
unsafe-ws-external = true

# Listen to all Prometheu
#
# Default is local.
prometheus-external = true

# Specify HTTP RPC server TCP port.
#rpc-port = 9933

# Specify WebSockets RPC server TCP port.
#ws-port = 9944

# Maximum number of WS RPC server connections.
#ws-max-connections = 25

# Specify browser Origins allowed to access the HTTP & WS RPC servers.
#
# A comma-separated list of origins (protocol://domain or special `null`
# value). Value of `all` will disable origin validation. Default is to
# allow localhost and https://polkadot.js.org origins. When running in
# --dev mode the default is to allow all origins.
rpc-cors = "All"

# Specify Prometheus data source server TCP Port.
#prometheus-port = 9615

# Do not expose a Prometheus metric endpoint.
#
# Prometheus metric endpoint is enabled by default.
#no-primetheus = true

# The human-readable name for this node.
#
# The node name will be reported to the telemetry server, if enabled.
name = "Example"

# Disable connecting to the Substrate telemetry server.
#
# Telemetry is on by default on global chains.
#no-telemetry = true

# The URL of the telemetry server to connect to.
#
# This flag can be passed multiple times as a means to specify multiple
# telemetry endpoints. Verbosity levels range from 0-9, with 0 denoting
# the least verbosity.
# Expected format is 'URL VERBOSITY', e.g. `--telemetry-url 'wss://foo/bar 0'`.
#telemetry-url = ["wss://telemetry.polkadot.io/submit/ 0"]

# Specify the chain specification (one of dev, local, or staging).
#chain = "crab"

# Specify the development chain.
#dev = true

# Specify custom base path.
base-path = "/tmp/data"

# Sets a custom logging filter. Syntax is <target>=<level>, e.g. -lsync=debug.
#
# Log levels (least to most verbose) are error, warn, info, debug, and trace.
# By default, all targets log `info`. The global log level can be set with -l<level>.
log = ["sync=trace"]

# Specify the state pruning mode, a number of blocks to keep or 'archive'.
#
# Default is to keep all block states if the node is running as a
# validator (i.e. 'archive'), otherwise state is only kept for the last
# 256 blocks.
pruning = "32"

# Force start with unsafe pruning settings.
#
# When running as a validator it is highly recommended to disable state
# pruning (i.e. 'archive') which is the default. The node will refuse to
# start as a validator if pruning is enabled unless this option is set.
unsafe-pruning = true

# Method for executing Wasm runtime code.
#wasm_method = "Interpreted"

# Specify the state cache size.
#state-cache-size = 67108864

# Comma separated list of targets for tracing.
#tracing-targets = ""

# Receiver to process tracing messages.
#tracing-receiver = "Log"

# Shortcut for `--name Alice --validator` with session keys for `Alice` added to keystore.
#alice = true

# Shortcut for `--name Bob --validator` with session keys for `Bob` added to keystore.
#bob = true

# Shortcut for `--name Charlie --validator` with session keys for `Charlie` added to keystore.
#charlie = true

# Shortcut for `--name Dave --validator` with session keys for `Dave` added to keystore.
#dave = true

# Shortcut for `--name Eve --validator` with session keys for `Eve` added to keystore.
#eve = true

# Shortcut for `--name Ferdie --validator` with session keys for `Ferdie` added to keystore.
#ferdie = true

# Shortcut for `--name One --validator` with session keys for `One` added to keystore.
#one = true

# Shortcut for `--name Two --validator` with session keys for `Two` added to keystore.
#two = true

# Enable authoring even when offline.
#force_authoring = true

# The size of the instances cache for each runtime.
#
# The default value is 8 and the values higher than 256 are ignored.
#max-runtime-instances = 8

# Specify a list of sentry node public addresses.
#
# Can't be used with --public-addr as the sentry node would take precedence over the public address
# specified there.
#sentry-nodes = []
